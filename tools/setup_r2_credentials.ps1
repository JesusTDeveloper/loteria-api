# Script para configurar credenciales de Cloudflare R2
# Ejecutar despu√©s de crear el bucket y API token

Write-Host "üéØ Configurando credenciales de Cloudflare R2..." -ForegroundColor Green
Write-Host "" -ForegroundColor White

Write-Host "üìã Por favor, proporciona la informaci√≥n de tu configuraci√≥n R2:" -ForegroundColor Cyan
Write-Host "" -ForegroundColor White

# Solicitar Account ID
$accountId = Read-Host "üîë Account ID de Cloudflare (32 caracteres hexadecimales)"
if ($accountId.Length -ne 32) {
    Write-Host "‚ùå Account ID debe tener exactamente 32 caracteres" -ForegroundColor Red
    exit 1
}

# Solicitar Access Key ID
$accessKeyId = Read-Host "üîë Access Key ID de R2"
if ($accessKeyId.Length -lt 10) {
    Write-Host "‚ùå Access Key ID parece ser muy corto" -ForegroundColor Red
    exit 1
}

# Solicitar Secret Access Key (oculto)
$secretAccessKey = Read-Host "üîë Secret Access Key de R2 (se ocultar√° mientras escribes)" -AsSecureString
if ($secretAccessKey.Length -eq 0) {
    Write-Host "‚ùå Secret Access Key no puede estar vac√≠o" -ForegroundColor Red
    exit 1
}

# Convertir SecureString a string
$secretAccessKeyText = [Runtime.InteropServices.Marshal]::PtrToStringAuto([Runtime.InteropServices.Marshal]::SecureStringToBSTR($secretAccessKey))

# Solicitar CDN Base URL
$cdnBase = Read-Host "üåê CDN Base URL (ej: https://cdn.tudominio.com o https://pub-1234567890.r2.dev)"
if (-not $cdnBase.StartsWith("https://")) {
    Write-Host "‚ùå CDN Base URL debe comenzar con https://" -ForegroundColor Red
    exit 1
}

Write-Host "" -ForegroundColor White
Write-Host "üîç Verificando configuraci√≥n..." -ForegroundColor Yellow

# Generar contenido del archivo .env
$envContent = @"
# Variables de entorno para Cloudflare R2
# ‚ö†Ô∏è  NO COMMITEAR ESTE ARCHIVO AL REPOSITORIO

MIRROR_IMAGES=true
S3_ENDPOINT=https://${accountId}.r2.cloudflarestorage.com
S3_BUCKET=loto-static
S3_ACCESS_KEY=${accessKeyId}
S3_SECRET_KEY=${secretAccessKeyText}
CDN_BASE=${cdnBase}
USER_AGENT="LotoAPI/1.0 (+contacto@tu-dominio.com)"

# Configuraci√≥n para Render/Railway:
# MIRROR_IMAGES=true
# S3_ENDPOINT=https://${accountId}.r2.cloudflarestorage.com
# S3_BUCKET=loto-static
# S3_ACCESS_KEY=${accessKeyId}
# S3_SECRET_KEY=${secretAccessKeyText}
# CDN_BASE=${cdnBase}
# USER_AGENT="LotoAPI/1.0 (+contacto@tu-dominio.com)"
"@

# Guardar en archivo .env
$envContent | Out-File -FilePath ".env" -Encoding UTF8

Write-Host "" -ForegroundColor White
Write-Host "‚úÖ Credenciales guardadas en .env" -ForegroundColor Green
Write-Host "" -ForegroundColor White

# Mostrar resumen
Write-Host "üìä Resumen de configuraci√≥n:" -ForegroundColor Cyan
Write-Host "   Account ID: $accountId" -ForegroundColor White
Write-Host "   Access Key ID: $accessKeyId" -ForegroundColor White
Write-Host "   Secret Access Key: [OCULTO]" -ForegroundColor White
Write-Host "   S3 Endpoint: https://${accountId}.r2.cloudflarestorage.com" -ForegroundColor White
Write-Host "   Bucket: loto-static" -ForegroundColor White
Write-Host "   CDN Base: $cdnBase" -ForegroundColor White
Write-Host "" -ForegroundColor White

Write-Host "üîß Pr√≥ximos pasos:" -ForegroundColor Cyan
Write-Host "   1. Probar conexi√≥n: python tools/test_mirror_complete.py" -ForegroundColor White
Write-Host "   2. Configurar variables en Render/Railway" -ForegroundColor White
Write-Host "   3. Desplegar aplicaci√≥n" -ForegroundColor White
Write-Host "   4. Ejecutar preseed: python tools/preseed_lottery_icons.py" -ForegroundColor White
Write-Host "" -ForegroundColor White

Write-Host "üîí IMPORTANTE:" -ForegroundColor Red
Write-Host "   - Archivo .env NO debe committearse al repositorio" -ForegroundColor Yellow
Write-Host "   - Credenciales deben mantenerse seguras" -ForegroundColor Yellow
Write-Host "   - Configurar variables en plataforma de despliegue" -ForegroundColor Yellow

# Verificar .gitignore
$gitignoreContent = Get-Content ".gitignore" -ErrorAction SilentlyContinue
if ($gitignoreContent -notcontains ".env") {
    Add-Content ".gitignore" "`n# Environment variables`n.env"
    Write-Host "‚úÖ .env agregado a .gitignore" -ForegroundColor Green
} else {
    Write-Host "‚úÖ .env ya est√° en .gitignore" -ForegroundColor Green
}

Write-Host "" -ForegroundColor White
Write-Host "üéâ ¬°Configuraci√≥n completada! Ahora puedes proceder con el despliegue." -ForegroundColor Green
